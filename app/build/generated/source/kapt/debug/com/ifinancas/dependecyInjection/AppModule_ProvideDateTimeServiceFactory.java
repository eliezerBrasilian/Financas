// Generated by Dagger (https://dagger.dev).
package com.ifinancas.dependecyInjection;

import com.ifinancas.services.DateTimeService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AppModule_ProvideDateTimeServiceFactory implements Factory<DateTimeService> {
  @Override
  public DateTimeService get() {
    return provideDateTimeService();
  }

  public static AppModule_ProvideDateTimeServiceFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static DateTimeService provideDateTimeService() {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideDateTimeService());
  }

  private static final class InstanceHolder {
    private static final AppModule_ProvideDateTimeServiceFactory INSTANCE = new AppModule_ProvideDateTimeServiceFactory();
  }
}
